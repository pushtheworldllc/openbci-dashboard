{"version":3,"file":"frequency-band.component.js","sourceRoot":"","sources":["frequency-band.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoD,eAAe,CAAC,CAAA;AACpE,IAAY,EAAE,WAAM,kBAAkB,CAAC,CAAA;AACvC,uBAA6B,WAAW,CAAC,CAAA;AACzC,2BAAiC,sBAAsB,CAAC,CAAA;AACxD,0BAA0B,qBAAqB,CAAC,CAAA;AAWhD;IAGE,gCAAoB,YAA0B,EAAU,SAAoB;QAAxD,iBAAY,GAAZ,YAAY,CAAc;QAAU,cAAS,GAAT,SAAS,CAAW;QAQpE,SAAI,GAAc,CAAC,EAAE,CAAC,CAAC;QAEvB,aAAQ,GAAiB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;QACzD,YAAO,GAAO,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC;YACzD,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;QAZD,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAaD,yCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,UAAC,IAAI;YACpD,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAI,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC/D,CAAC;IApBD;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;wDAAA;IACR;QAAC,YAAK,EAAE;;yDAAA;IAlBV;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,+BAA+B;YAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;YAC3C,UAAU,EAAE,CAAC,6BAAgB,CAAC;YAC9B,SAAS,EAAE,CAAC,qBAAY,EAAE,qBAAS,CAAC;SACrC,CAAC;;8BAAA;IA+BF,6BAAC;AAAD,CAAC,AA7BD,IA6BC;AA7BY,8BAAsB,yBA6BlC,CAAA","sourcesContent":["import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { ChartService } from '../shared';\nimport { CHART_DIRECTIVES } from '../shared/ng2-charts';\nimport { Constants } from '../shared/constants';\n\n@Component({\n  moduleId: module.id,\n  selector: 'bci-frequency-band',\n  templateUrl: 'frequency-band.component.html',\n  styleUrls: ['frequency-band.component.css'],\n  directives: [CHART_DIRECTIVES],\n  providers: [ChartService, Constants]\n})\n\nexport class FrequencyBandComponent implements OnInit {\n\n  socket: any;\n  constructor(private chartService: ChartService, private constants: Constants) {\n    this.socket = io(constants.socket.url);\n  }\n  \n  @Input() public type:string;\n  @Input() public band:string;\n  @Input() public color:number;\n  \n  private data:Array<any> = [[]];\n  private colors:Array<any>;\n  private channels:Array<string> = this.chartService.getChannels();\n  private options:any = this.chartService.getChartJSDefaults({\n    responsive: false\n  });\n  \n  ngOnInit() {    \n    this.colors = this.chartService.getColorByIndex(this.color);\n    this.socket.on(this.constants.socket.events.fft, (data) => {\n      this.data = data[this.band || 'data'];\n    });\n  }\n  \n  ngOnDestroy () {\n    this.socket.removeListener(this.constants.socket.events.fft);\n  } \n\n}\n"]}