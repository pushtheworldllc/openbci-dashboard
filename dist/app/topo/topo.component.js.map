{"version":3,"file":"topo.component.js","sourceRoot":"","sources":["topo.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Constants } from '../shared/constants';\n\ndeclare var chroma: any;\ndeclare var Plotly: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'bci-topo',\n  templateUrl: 'topo.component.html',\n  styleUrls: ['topo.component.css'],\n  providers: [Constants]\n})\n\nexport class TopoComponent implements OnInit {\n  \n  socket: any;\n  plotElement: any;\n  \n  constructor(private view: ElementRef, private constants: Constants) {\n    this.socket = io(constants.socket.url);\n  }\n  \n  private data: any = {\n    x: [],\n    y: [],\n    name: 'density',\n    ncontours: 15,\n    colorscale: [\n      [0, 'rgb(208, 0, 0)'], \n      [.50, 'rgb(247, 192, 0)'], \n      [.60, 'rgb(241, 255, 22)'], \n      [.80, 'rgb(68, 255, 250)'], \n      [.95, 'rgb(50, 0, 159)'], \n      [1, 'rgb(51, 51, 51)']\n    ],\n    reversescale: true,\n    showscale: false,\n    type: 'histogram2dcontour',\n    line: {\n      width: 1\n    },\n    contours: {\n      //coloring: 'heatmap'\n    }\n  };\n    \n  private layout: any = {\n    autosize: true,\n    width: 600,\n    height: 450,\n    bargap: 0,\n    paper_bgcolor: 'rgba(0,0,0,0)',\n    plot_bgcolor: 'rgba(0,0,0,0)',\n    margin: { l: 0, r: 0, b: 0, t: 0 },\n    xaxis: {\n      autorange: true,\n      showgrid: false,\n      zeroline: false,\n      showline: false,\n      autotick: true,\n      ticks: '',\n      showticklabels: false\n    },\n    yaxis: {\n      autorange: true,\n      showgrid: false,\n      zeroline: false,\n      showline: false,\n      autotick: true,\n      ticks: '',\n      showticklabels: false\n    }\n  };\n  \n  private options: any = {\n    staticPlot: true\n  };\n  \n  ngOnInit(): void {\n    this.plotElement = this.view.nativeElement.querySelector('#topo');\n    Plotly.newPlot(this.plotElement.id, [this.data], this.layout, this.options);\n\n    this.socket.on(this.constants.socket.events.topo, (data) => {\n      console.log(data.plot);\n      this.data.x = data.plot.x; //this.getRandomData().x\n      this.data.y = data.plot.y; //this.getRandomData().y\n      Plotly.redraw(this.plotElement);\n      //Plotly.Plots.resize(this.plotElement);\n    });\n  }\n  \n  ngOnDestroy (): void {\n    this.socket.removeListener(this.constants.socket.events.topo);\n  }\n  \n  getRandomData (): any {\n    function normal() {\n        var x = 0, y = 0, rds, c;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          rds = x * x + y * y;\n        } while (rds == 0 || rds > 1);\n        c = Math.sqrt(-2 * Math.log(rds) / rds);\n        return x * c;\n    }\n\n    var N = 2000,\n        a = -1,\n        b = Math.random();\n\n    var step = (b - a) / (N - 1);\n    var t = new Array(N), x = new Array(N), y = new Array(N);\n\n    for(var i = 0; i < N; i++){\n      t[i] = a + step * i;\n      x[i] = (Math.pow(t[i], 3)) + (0.3 * normal() );\n      y[i] = (Math.pow(t[i], 6)) + (0.3 * normal() );\n    }\n    \n    return {\n      x: x,\n      y: y\n    };\n    \n  }\n  \n}\n"]}