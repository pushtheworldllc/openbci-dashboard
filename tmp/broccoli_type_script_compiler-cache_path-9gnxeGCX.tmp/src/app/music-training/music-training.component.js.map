{"version":3,"file":"music-training.component.js","sourceRoot":"","sources":["music-training.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA8C,eAAe,CAAC,CAAA;AAC9D,IAAY,EAAE,WAAM,kBAAkB,CAAC,CAAA;AACvC,0BAA0B,qBAAqB,CAAC,CAAA;AAWhD;IAKE,gCAAoB,IAAgB,EAAU,SAAoB;QAA9C,SAAI,GAAJ,IAAI,CAAY;QAAU,cAAS,GAAT,SAAS,CAAW;QAChE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAEtE,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE;YACvE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM;SAClE,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,IAAI;YACrD,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,IAAI,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAO,GAAP;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC;QACzD,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,SAAS,CAAC;IAC9C,CAAC;IAED,uCAAM,GAAN;QACE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACvD,CAAC;IAED,uCAAM,GAAN;IAEA,CAAC;IAvCH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,oBAAoB;YAC9B,WAAW,EAAE,+BAA+B;YAC5C,SAAS,EAAE,CAAC,8BAA8B,CAAC;YAC3C,SAAS,EAAE,CAAC,qBAAS,CAAC;SACvB,CAAC;;8BAAA;IAmCF,6BAAC;AAAD,CAAC,AAlCD,IAkCC;AAlCY,8BAAsB,yBAkClC,CAAA","sourcesContent":["import { Component, OnInit, ElementRef } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Constants } from '../shared/constants';\n\ndeclare var Phaser: any;\n\n@Component({\n  moduleId: module.id,\n  selector: 'bci-music-training',\n  templateUrl: 'music-training.component.html',\n  styleUrls: ['music-training.component.css'],\n  providers: [Constants]\n})\nexport class MusicTrainingComponent implements OnInit {\n\n  game: any;\n  phaserElement: any;\n  socket: any;\n  constructor(private view: ElementRef, private constants: Constants) {\n    this.socket = io(constants.socket.url);\n  }\n\n  ngOnInit() {\n    this.phaserElement = this.view.nativeElement.querySelector('#phaser');\n    \n    this.game = new Phaser.Game(480, 480, Phaser.WEBGL, this.phaserElement.id, {\n        preload: this.preload, create: this.create, update: this.update\n    });\n    \n    this.socket.on(this.constants.socket.events.time, (data) => {\n      console.log('data from music component', data);\n    });\n  }\n  \n  preload () {\n    this.game.scale.scaleMode = Phaser.ScaleManager.NO_SCALE;\n    this.game.stage.backgroundColor = '#FF0000';\n  }\n  \n  create () {\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n  }\n  \n  update () {\n    \n  }\n\n}\n"]}